# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
jobs:
  build:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
          - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint 
  
  deploy:
    docker:
      - image: python:3.7.3-stretch
    
    steps:
      - checkout

      - run:
          name: Installing dependencies
          command: |
            pip install awscli
      - run:
          name: creating instance for application
          command: |
              aws cloudformation deploy \
              --template-file .circleci/files/deploy.yml \
              --tags project=mlproject \
              --stack-name "mlproject-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID=${CIRCLE_WORKFLOW_ID:0:7}

      - run:
          name: add backend ec2 ip to ansible inventory
          command: |
            aws ec2 describe-instances \
              --query 'Reservations[*].Instances[*].PublicIpAddress' \
              --filters "Name=tag:aws:cloudformation:stack-name,Values=mlproject-${CIRCLE_WORKFLOW_ID:0:7}" \
              --output text >> ~/project/.circleci/ansible/inventory.txt
              cat ~/project/.circleci/ansible/inventory.txt

  configure-deploy:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["40:a7:61:3c:d4:5f:5f:48:77:97:21:73:58:d4:69:b8"]
      - attach_workspace:
          at: ~/
      - run:
          name: Installing dependencies
          command: |
            apk add --update tar gzip ansible 
            pip install awscli 
      - run:
          name: Configure server
          command: |
            cd .circleci/ansible
            cat inventory.txt
            ansible-playbook -i inventory.txt configure-deploy.yml
  

workflows:
  myworkflow:
    jobs:
      - build
      - deploy:
          requires: [build]
      - configure-deploy:
          requires: [deploy]